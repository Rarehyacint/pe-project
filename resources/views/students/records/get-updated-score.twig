{% from 'components/core/show-item' import show_item %}

<div id="subjects" class="bg-gray-100 px-4 rounded-2xl text-gray-800 "\>            
    <table>
        <thead>
        <tr>
            <th>Subject</th>
            <th>Max Score</th>
            <th>Score Obtained</th>
        </tr>
        </thead>
        <tbody>
            {% for subject in exam_record.subjects %}
            <tr>
                <td>{{ subject.subject_name }}</td>
                <td>{{ subject.score }}</td>
                <td>{{ subject.score_obtained }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<div id="exam_record_info" class="htmx-animate flex flex-col justify-between gap-y-4 rounded-xl bg-gray-10 p-4 shadow-sm ring-1 ring-gray-950/5">
    <div id="student-score-donut-graph" 
        class="h-[200px] w-[200px]"
        data-student-score-status="{{ exam_record.status }}" 
        data-student-score="{{ exam_record.total_score }}"
        data-exam-max-score = "{{ exam_record.max_score }}">
    </div>
    {{ show_item('Status', exam_record.status) }}
    {{ show_item('Time Taken', exam_record.time_taken ~ ' minutes')}}
    {{ show_item('Date Taken', exam_record.date_taken|date("m/d/Y"))}}
    <div class="flex flex-col gap-y-2 w-full">
        <a href="#" class="flex p-2 max-h-fit w-full bg-orange-900 rounded-lg font-medium text-white hover:bg-orange-700 hover:text-gray-50 cursor-pointer justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
            <path d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0 0 16.5 9h-1.875a1.875 1.875 0 0 1-1.875-1.875V5.25A3.75 3.75 0 0 0 9 1.5H5.625Z" />
            <path d="M12.971 1.816A5.23 5.23 0 0 1 14.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 0 1 3.434 1.279 9.768 9.768 0 0 0-6.963-6.963Z" />
            </svg>
            Download this record
        </a>
        <a href="#" class="flex p-2 max-h-fit w-full bg-green-900 rounded-lg font-medium text-white hover:bg-green-700 hover:text-gray-50 cursor-pointer justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6 mr-1">
            <path d="M1.5 8.67v8.58a3 3 0 0 0 3 3h15a3 3 0 0 0 3-3V8.67l-8.928 5.493a3 3 0 0 1-3.144 0L1.5 8.67Z" />
            <path d="M22.5 6.908V6.75a3 3 0 0 0-3-3h-15a3 3 0 0 0-3 3v.158l9.714 5.978a1.5 1.5 0 0 0 1.572 0L22.5 6.908Z" />
            </svg>
            Email me this record
        </a>
    </div>
    <script>
        student_data_div = document.getElementById('student-score-donut-graph');
        if (student_data_div) {
        student_score = student_data_div.dataset.studentScore;
        exam_max_score = student_data_div.dataset.examMaxScore;
         student_score_status = student_data_div.dataset.studentScoreStatus;
        student_score_status_message = student_score_status == 'perfect_score' ? 'Perfect' : student_score_status == 'pass' ? 'Pass' : 'Review';
        const remaining = exam_max_score - student_score;
        const marker_color = student_score_status == 'perfect_score' ? '#FFD700' : student_score_status == 'pass' ? 'rgb(44, 160, 44)' : 'rgb(255, 127, 14)';

        const student_score_donut_data = [{
            type: 'pie',
            values: [student_score, remaining],
            labels: [`${student_score} pts`, ''],            
            hole: 0.6,
            text: [`${student_score} pts`, ''],   
            textinfo: 'text',                        
            hoverinfo: 'none',      
            direction: 'counterclockwise',
            sort: false,
            marker: {
                line: { width: 2, color: '#333'},
                colors: [marker_color, 'rgb(220, 220, 220)'], 
                opacity: 0.7  
            },
            textposition: 'inside',
            showlegend: false
        }];

        const student_score_donut_layout = {
            title: 'Score Breakdown',
            showlegend: false,
            annotations: [
                {
                    font: {
                        size: 18
                    },
                    showarrow: false,
                    text: `${student_score_status_message}`,
                    x: 0.5,
                    y: 0.5
                }
            ],
            autosize: true,
            margin: { l: 5, r:5, t: 5, b: 5 },
        };
        Plotly.newPlot('student-score-donut-graph', student_score_donut_data, student_score_donut_layout, {displayModeBar: false});
    }
</script>
</div> 

