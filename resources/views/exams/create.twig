{% from 'components/core/breadcrumbs' import breadcrumb %}
{% from 'components/core/show-header' import show_header %}
{% import 'components/core/forms' as forms %}

{% extends 'components/core/faculty-layout' %}

{% block content %}
{{ breadcrumb() }}
<div class="flex flex-col mx-4 pl-4 pb-8">
    <h1 class="font-bold text-4xl">Create Exam</h1>
</div>

<div class="flex flex-1 flex-col mx-16">
    <form id="exam-form" action="{{ route('exams.store') }}" method="POST" class="flex flex-col gap-y-4">
        {{ csrf_field() }}
        <div class="flex max-w-full rounded-xl bg-white px-2 shadow-sm ring-1 ring-gray-950/5">
            <div class="flex flex-col p-4 flex-1">
                {{ show_header('Details') }}
                <div class="flex gap-x-32 justify-between w-full">
                    <div class="flex flex-col gap-y-4 w-full">
                        {{ forms.form_field(
                            label:forms.label(
                                id:'name', 
                                content:'Name', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900  after:text-red-500 after:content-[\'\*\']'}
                            ),
                            input:forms.text(
                                name:'name', 
                                value: input_old('name'),
                                attributes:{
                                    'class':'block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'required':true}
                            ),
                            errors:errors.get('name'),
                            isColumn:true 
                        )}}
                        <div class="flex gap-1">
                            <div class="relative inline-block shrink-0">
                                <button 
                                    id="toggle-course-list" 
                                    type="button"
                                    class="px-2 py-1 mt-1 bg-blue-900 text-sm text-gray-50 rounded-md cursor-pointer hover:bg-blue-700 transition"
                                >
                                    + Course
                                </button>
                                <div 
                                    id="course-list" 
                                    class="absolute right-0 mt-1 w-32 bg-white border border-gray-200 rounded-md shadow-lg z-50 hidden"
                                >
                                    <ul class="text-sm max-h-56 overflow-auto text-gray-700">
                                    {% for course in courses %}
                                    <li><button type="button" class="course-btn w-full text-left px-4 py-2 hover:bg-blue-100" data-tag-abbv="{{ course.abbreviation }}" data-tag-id="{{ course.id }}">{{ course.abbreviation }}</button></li>
                                    {% endfor %}
                                    </ul>
                                </div>
                                </div>
                            <div id="tags-container" class="flex flex-wrap gap-1 p-1 "></div>
                            <input type="hidden" name="courses[]" id="courses-id" />
                        </div>
                            {% if errors.get('courses.0') %}
                                <span class="text-red-500 text-sm font-semibold whitespace-nowrap">{{ errors.get('courses.0')[0] }}</span>    
                            {% endif %}
                    </div>
                    <div class="flex flex-1/2 flex-col gap-y-4 w-full">
                        {{ forms.form_field(
                            label:forms.label(
                                id:'author', 
                                content:'Author', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                            ),
                            input:forms.text(
                                name:'author', 
                                attributes:{
                                    'class':'block w-full cursor-not-allowed rounded-md bg-gray-100 px-3 py-1.5 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 sm:text-sm/6',
                                    'placeholder':'Author Name is automatic/disabled',
                                    'disabled':true}
                            ),
                            isColumn:true 
                        )}}
                        {{ forms.form_field(
                            label:forms.label(
                                id:'code', 
                                content:'Access Code', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                            ),
                            input:forms.text(
                                name:'code', 
                                attributes:{
                                    'class':'block w-full cursor-not-allowed rounded-md bg-gray-100 px-3 py-1.5 text-white outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 sm:text-sm/6',
                                    'placeholder':'Access Code is automatic/disabled',
                                    'disabled':true}
                            ),
                            isColumn:true 
                        )}}
                    </div>

                </div>
            </div>  
        </div>

        <div class="flex max-w-full rounded-xl bg-white px-2 shadow-sm ring-1 ring-gray-950/5">
            <div class="flex flex-col p-4 flex-1">
                {{ show_header('Settings') }}
                <div class="flex gap-x-32 justify-between w-full">
                    <div class="flex flex-col gap-y-4 w-full">
                        {{ forms.form_field(
                            label:forms.label(
                                id:'max_score',
                                content:'Max Score', attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                                ),
                            input:forms.number(
                                name:'max_score',
                                value: input_old('max_score'), 
                                attributes:{
                                    'class':'block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'min':0,
                                    'required': true
                                }),
                            errors:errors.get('max_score'),
                        )}}
                        {{ forms.form_field(
                            label:forms.label(
                                id:'duration',
                                content: 'Duration (in minutes)', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                                ),
                            input:forms.number(
                                name:'duration',
                                value: input_old('duration'), 
                                attributes:{
                                    'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'min':0,
                                    'placeholder':'Blank = unlimited duration'})
                        )}}
                        {{ forms.form_field(
                            label:forms.label(
                                id:'passing_score', 
                                content:'Passing Score (%)', attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                                ),
                            input:forms.number(
                                name:'passing_score',
                                value: input_old('passing_score')|default(50),
                                attributes:{
                                    'class':'block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'min':1
                                }),
                            errors:errors.get('passing_score')
                        )}}
                    </div>
                    <div class="flex flex-col gap-y-4 w-full">
                        {{ forms.form_field(
                            label:forms.label(
                                id:'retakes', 
                                content:'Retakes', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-gray-900'}
                            ),
                            input:forms.number(
                                name:'retakes',
                                value: input_old('retakes'), 
                                attributes:{
                                    'class':'block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'min':0,
                                    'placeholder':'Leave blank for unlimited retakes'})
                        )}}
                        {{ forms.form_field(
                            label:forms.label(
                                id:'examination_date', 
                                content:'Examination Date', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-green-900'}
                                ),
                            input:forms.datetime(
                                name:'examination_date',
                                value: input_old('examination_date'), 
                                attributes:{
                                    'class':'block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                    'min' : date('now')|date('Y-m-d\\TH:i')}
                                ),
                            errors:errors.get('examination_date'),
                            isColumn: true,
                        )}}
                        {{ forms.form_field(
                            label:forms.label(
                                id:'expiration_date', 
                                content:'Expiration Date', 
                                attributes:{
                                    'class':'whitespace-nowrap text-sm/6 font-medium text-orange-900'}
                                ),
                            input:forms.datetime(
                                name:'expiration_date',
                                value: input_old('expiration_date'),  
                                attributes:{
                                    'class':'block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                        'min' : date('now')|date('Y-m-d\\TH:i')}
                                ),
                            errors:errors.get('expiration_date'),
                            isColumn: true,
                        )}}
                    </div>
                </div>
            </div>  
        </div>

        <div class="flex gap-x-2">
            <button type="submit" class="cursor-pointer bg-blue-900 text-gray-200 hover:bg-blue-600 hover:text-white duration-300 rounded-lg px-2 py-1 font-semibold text-sm">Create Exam</button>
            <a href="/exams" class="cursor-pointer bg-white border-1 border-gray-600 text-gray-900 hover:bg-red-500 hover:border-white hover:text-white duration-300 rounded-lg p-2 font-semibold">Cancel</a>

        </div>
    </form>
</div>
<script>
  const container = document.getElementById("tags-container");
  const tagsHiddenInput = document.getElementById('courses-id');
  const tags = new Set();

  const toggleBtn = document.getElementById("toggle-course-list");
  const courseList = document.getElementById("course-list");

  toggleBtn.addEventListener("click", () => {
    courseList.classList.toggle("hidden");
  });

  document.addEventListener("click", (e) => {
    if (!toggleBtn.contains(e.target) && !courseList.contains(e.target)) {
      courseList.classList.add("hidden");
    }
  });

  // Handle course selection
  const courseButtons = document.querySelectorAll(".course-btn");

  courseButtons.forEach(button => {
    button.addEventListener("click", () => {
      const tag = button.dataset.tagAbbv;
      const tag_id = button.dataset.tagId;
        if (tag && tag_id && !tags.has(tag_id)) {
            addTag(tag, tag_id);
            tags.add(tag_id);
            updateHiddenInput();
            courseList.classList.add("hidden");
        }
    });
  });

  function addTag(tag, tag_id) {
    const tagEl = document.createElement("span");
    tagEl.className = `
      inline-flex 
      items-center 
      gap-1 
      px-2 py-1 
      bg-blue-100 
      text-blue-900 
      rounded-full 
      font-semibold 
      text-xs 
      select-none
      add-tag-animation
    `;
    tagEl.textContent = tag;
    tagEl.dataset.tagId = tag_id;

    const closeBtn = document.createElement("button");
    closeBtn.innerHTML = "&times;";
    closeBtn.type = "button"; 
    closeBtn.className = `
      text-blue-900 
      text-sm 
      font-bold 
      cursor-pointer 
      bg-transparent 
      border-none
    `;

    closeBtn.addEventListener("click", () => {
        tagEl.classList.add("delete-tag-animation");
        
        tagEl.addEventListener("animationend", () => {
            container.removeChild(tagEl);
            tags.delete(tag);
            updateHiddenInput();
        });
    });

    tagEl.appendChild(closeBtn);
    container.appendChild(tagEl);
  }

  function updateHiddenInput() {
    document.querySelectorAll('input[name="courses[]"]').forEach(el => el.remove());

    // Create new inputs
    Array.from(tags).forEach(tagId => {
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "courses[]";
        input.value = tagId;
        document.getElementById("exam-form").appendChild(input); // Replace with your actual form ID
    });
  }
</script>
{% endblock %}